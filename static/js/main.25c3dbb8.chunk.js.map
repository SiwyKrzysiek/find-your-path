{"version":3,"sources":["Navigation.js","Home.js","Cellar.js","model/Book.js","Bookcase.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","props","className","React","Children","map","children","child","i","Home","to","style","width","Cellar","BookDTO","id","title","contetn","this","withRouter","bookSelect","createRef","ref","books","book","key","value","onClick","bookId","current","url","match","history","push","type","App","state","logged","exact","path","component","render","Component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.25c3dbb8.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Navigation(props) {\n    return (\n        <div className=\"card col-3 navigation\">\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">Next place</h5>\n\n                <ul className=\"nav nav-pills flex-column\">\n                    {React.Children.map(props.children, (child, i) => (\n                        <li className=\"nav-item\">\n                            {child}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navigation from \"./Navigation\";\n\nexport default function Home(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n\n        <Navigation>\n          <Link to=\"/cellar\" className=\"nav-link\">Cellar</Link>\n          <Link to=\"/bookcase\" className=\"nav-link\">Bookcase</Link>\n        </Navigation>\n\n        <div className=\"card col\" style={{ width: \"18rem\" }}>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Home</h5>\n            <p className=\"card-text\">Time to go on an adventure!</p>\n          </div>\n        </div >\n\n      </div>\n    </div>\n  );\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navigation from \"./Navigation\";\n\nexport default function Cellar(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n\n        <Navigation>\n          <Link to=\"/home\" className=\"nav-link\">Upstars</Link>\n        </Navigation>\n\n        <div className=\"card col\" style={{ width: \"18rem\" }}>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Cellar</h5>\n            <p className=\"card-text\">Here you can find locked chest with wierd message scrambled on top.</p>\n            {/* TODO: Ability to inspect message */}\n            <p>Message: \"You must be logged to open me\"</p>\n          </div>\n        </div >\n\n      </div>\n    </div>\n  );\n}","export default class BookDTO {\n  constructor(id, title, contetn) {\n    this.id = id;\n    this.title = title;\n    this.contetn = contetn;\n  }\n}\n\n// Probably should be somewhere else \nexport function createSampleBooks() {\n  return [\n    new BookDTO(1, \"Computer magic\", \"Duis id lectus vitae nisl iaculis dignissim at vel eros. Sed elit quam, laoreet quis aliquam id, laoreet vitae ligula. Nulla tristique, felis eu sollicitudin venenatis, mi risus porttitor lacus, at tincidunt libero velit in nibh. In dictum, orci vitae sodales viverra, nulla lorem vulputate urna, eu maximus nulla augue commodo nulla. Morbi molestie, est sit amet mollis elementum, turpis elit consectetur quam, a accumsan mi mauris vitae libero. Etiam dictum sagittis orci, id dignissim dui porta non. Praesent porta, eros in sollicitudin laoreet, tellus dui ultricies nunc, non consectetur arcu nisi eget augue. Pellentesque id gravida urna, at facilisis est. Donec id lacus est. Mauris eleifend laoreet arcu, non pretium metus ornare sed. In hac habitasse platea dictumst. Curabitur molestie, purus in ornare commodo, nulla nisl euismod tellus, in ullamcorper tellus velit in augue. Curabitur ac posuere purus. Nulla orci arcu, porta sed est luctus, luctus tincidunt tellus.\"),\n    new BookDTO(2, \"Secret cooking ingredients\", \"Etiam at quam ornare enim accumsan tristique id faucibus eros. Mauris placerat sed est sit amet elementum. Donec elementum, augue nec laoreet ornare, massa nibh lobortis felis, at sodales sem ipsum quis leo. Mauris dictum malesuada leo, vel mattis elit pulvinar ac. Aliquam a lorem erat. Donec vel nunc id dui ullamcorper fringilla quis et dolor. Aliquam tincidunt quis nulla vel suscipit. Quisque vel bibendum magna. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Curabitur rhoncus velit eget urna pulvinar aliquet. In quis mi ut nisi euismod dictum non eget augue. Proin in molestie dui, eget vestibulum urna. Cras semper diam eu suscipit maximus. Vivamus eros nunc, mattis in sem eu, rhoncus ornare velit.\"),\n    new BookDTO(3, \"Art of binding\", \"Mauris ut finibus felis, eu dictum odio. Nam orci leo, ultricies ac sem a, finibus congue sapien. Mauris dictum gravida mauris. Nam et dignissim eros. Aliquam cursus pharetra leo vel finibus. Cras vehicula mauris in pretium commodo. Vestibulum vehicula molestie varius. Phasellus non tellus et leo consequat tincidunt. Duis vitae viverra augue, vel sollicitudin metus. Pellentesque auctor erat sed est lobortis rhoncus ut at ligula. Fusce sodales, enim sit amet varius placerat, odio metus imperdiet sapien, a hendrerit libero mauris ut nulla. Sed at erat quam. Donec sodales ante a nibh bibendum lobortis. Mauris lobortis elit quis libero rutrum, eget rutrum dolor sagittis. In fringilla vel nisl ut mollis. Cras finibus dolor eget nisl sodales, in dictum purus pretium.\")\n  ];\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport Navigation from \"./Navigation\";\n\nimport BookDTO from \"./model/Book\";\n\nfunction Bookcase(props) {\n  let bookSelect = React.createRef();\n\n  const handleBookOpen = () => {\n    const bookId = bookSelect.current.value;\n    const url = `${props.match.url}/${bookId}`;\n    props.history.push(url);\n  };\n\n  const handleBookClose = () => {\n    const url = `${props.match.url}`;\n    props.history.push(url);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n\n        <Navigation>\n          <Link to=\"/home\" className=\"nav-link\">Home (the main part)</Link>\n        </Navigation>\n\n        <div className=\"card col\" style={{ width: \"18rem\" }}>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Bookcase</h5>\n            <p className=\"card-text\">Here you can take and reed books. One of them is <b>special</b>.</p>\n\n            <p className=\"card-text\">If You want to take book of shelf select it and confirm.</p>\n\n            <form>\n              <div className=\"input-group\">\n                <select ref={bookSelect} className=\"custom-select\">\n                  {props.books.map((book, i) => (\n                    <option key={i} value={book.id}>{book.title}</option>\n                  ))}\n                </select>\n                <div className=\"input-group-append\">\n                  <button onClick={handleBookOpen} className=\"btn btn-outline-secondary\" type=\"button\">Open</button>\n                  <button onClick={handleBookClose} className=\"btn btn-outline-secondary\" type=\"button\">Close</button>\n                </div>\n              </div>\n            </form>\n\n          </div>\n        </div >\n\n      </div>\n    </div>\n  );\n}\n\n// Bookcase.propTypes = {\n//     books: PropTypes.arrayOf(BookDTO)\n// }\n\nexport default withRouter(Bookcase);","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Link,\n  Switch,\n  matchPath,\n  Redirect\n} from \"react-router-dom\";\n\nimport Home from \"./Home\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport Cellar from \"./Cellar\";\nimport Bookcase from \"./Bookcase\";\nimport { createSampleBooks } from \"./model/Book\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      logged: false,\n      books: createSampleBooks()\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <section className=\"container logo\">\n          <h2>Find your own path</h2>\n        </section>\n\n        <main>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/home\" component={Home} />\n              <Route path=\"/cellar\" component={Cellar} />\n              <Route path=\"/bookcase\" render={(props) => (\n                <Bookcase {...props} books={this.state.books} />)\n              } />\n            </Switch>\n          </Router>\n        </main>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}